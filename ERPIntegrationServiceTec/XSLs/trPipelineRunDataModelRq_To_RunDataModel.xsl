<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:ns0="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:tns="http://xmlns.oracle.com/oxp/service/v2" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/ERPIntegrationServiceTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="RunDataModelRq" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="WSDL">
            <oracle-xsl-mapper:schema location="../WSDL/Externals/ReportService.wsdl"/>
            <oracle-xsl-mapper:rootElement name="runDataModel" namespace="http://xmlns.oracle.com/oxp/service/v2"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [MON JUL 17 17:56:19 CDT 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:param name="username"/>
   <xsl:param name="password"/>
   <xsl:template match="/">
      <tns:runDataModel>
         <tns:reportRequest>
            <tns:XDOPropertyList>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:XDOPropertyList/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:XDOPropertyList/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <tns:metaDataList>
                  <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:XDOPropertyList/ns0:metaDataList/@xsi:nil">
                     <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:XDOPropertyList/ns0:metaDataList/@xsi:nil"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:for-each select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:XDOPropertyList/ns0:metaDataList/ns0:item">
                     <tns:item>
                        <tns:metaDataName>
                           <xsl:if test="ns0:metaDataName/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:metaDataName/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:metaDataName"/>
                        </tns:metaDataName>
                        <tns:metaDataValue>
                           <xsl:if test="ns0:metaDataValue/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:metaDataValue/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:metaDataValue"/>
                        </tns:metaDataValue>
                     </tns:item>
                  </xsl:for-each>
               </tns:metaDataList>
            </tns:XDOPropertyList>
            <tns:attributeCalendar>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeCalendar/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeCalendar/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeCalendar"/>
            </tns:attributeCalendar>
            <tns:attributeFormat>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeFormat/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeFormat/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeFormat"/>
            </tns:attributeFormat>
            <tns:attributeLocale>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeLocale/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeLocale/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeLocale"/>
            </tns:attributeLocale>
            <tns:attributeTemplate>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTemplate/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTemplate/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTemplate"/>
            </tns:attributeTemplate>
            <tns:attributeTimezone>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTimezone/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTimezone/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeTimezone"/>
            </tns:attributeTimezone>
            <tns:attributeUILocale>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeUILocale/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeUILocale/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:attributeUILocale"/>
            </tns:attributeUILocale>
            <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:byPassCache ) > 0">
               <tns:byPassCache>
                  <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:byPassCache"/>
               </tns:byPassCache>
            </xsl:if>
            <tns:dynamicDataSource>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <tns:JDBCDataSource>
                  <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/@xsi:nil">
                     <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/@xsi:nil"/>
                     </xsl:attribute>
                  </xsl:if>
                  <tns:JDBCDriverClass>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverClass/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverClass/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverClass"/>
                  </tns:JDBCDriverClass>
                  <tns:JDBCDriverType>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverType/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverType/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCDriverType"/>
                  </tns:JDBCDriverType>
                  <tns:JDBCPassword>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCPassword/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCPassword/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCPassword"/>
                  </tns:JDBCPassword>
                  <tns:JDBCURL>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCURL/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCURL/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCURL"/>
                  </tns:JDBCURL>
                  <tns:JDBCUserName>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCUserName/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCUserName/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:JDBCUserName"/>
                  </tns:JDBCUserName>
                  <tns:dataSourceName>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:dataSourceName/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:dataSourceName/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:dataSourceName"/>
                  </tns:dataSourceName>
                  <tns:postProcessFunc>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:postProcessFunc/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:postProcessFunc/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:postProcessFunc"/>
                  </tns:postProcessFunc>
                  <tns:preProcessFunc>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:preProcessFunc/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:preProcessFunc/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:preProcessFunc"/>
                  </tns:preProcessFunc>
                  <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:useProxyAuth ) > 0">
                     <tns:useProxyAuth>
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:JDBCDataSource/ns0:useProxyAuth"/>
                     </tns:useProxyAuth>
                  </xsl:if>
               </tns:JDBCDataSource>
               <tns:fileDataSource>
                  <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/@xsi:nil">
                     <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/@xsi:nil"/>
                     </xsl:attribute>
                  </xsl:if>
                  <tns:dynamicDataSourcePath>
                     <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/ns0:dynamicDataSourcePath/@xsi:nil">
                        <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                           <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/ns0:dynamicDataSourcePath/@xsi:nil"/>
                        </xsl:attribute>
                     </xsl:if>
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/ns0:dynamicDataSourcePath"/>
                  </tns:dynamicDataSourcePath>
                  <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/ns0:temporaryDataSource ) > 0">
                     <tns:temporaryDataSource>
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:dynamicDataSource/ns0:fileDataSource/ns0:temporaryDataSource"/>
                     </tns:temporaryDataSource>
                  </xsl:if>
               </tns:fileDataSource>
            </tns:dynamicDataSource>
            <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:flattenXML ) > 0">
               <tns:flattenXML>
                  <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:flattenXML"/>
               </tns:flattenXML>
            </xsl:if>
            <tns:parameterNameValues>
               <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/@xsi:nil">
                  <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                     <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/@xsi:nil"/>
                  </xsl:attribute>
               </xsl:if>
               <tns:listOfParamNameValues>
                  <xsl:if test="/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/@xsi:nil">
                     <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                        <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/@xsi:nil"/>
                     </xsl:attribute>
                  </xsl:if>
                  <xsl:for-each select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item">
                     <tns:item>
                        <tns:UIType>
                           <xsl:if test="ns0:UIType/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:UIType/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:UIType"/>
                        </tns:UIType>
                        <tns:dataType>
                           <xsl:if test="ns0:dataType/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:dataType/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:dataType"/>
                        </tns:dataType>
                        <tns:dateFormatString>
                           <xsl:if test="ns0:dateFormatString/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:dateFormatString/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:dateFormatString"/>
                        </tns:dateFormatString>
                        <tns:dateFrom>
                           <xsl:if test="ns0:dateFrom/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:dateFrom/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:dateFrom"/>
                        </tns:dateFrom>
                        <tns:dateTo>
                           <xsl:if test="ns0:dateTo/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:dateTo/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:dateTo"/>
                        </tns:dateTo>
                        <tns:defaultValue>
                           <xsl:if test="ns0:defaultValue/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:defaultValue/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:defaultValue"/>
                        </tns:defaultValue>
                        <tns:fieldSize>
                           <xsl:if test="ns0:fieldSize/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:fieldSize/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:fieldSize"/>
                        </tns:fieldSize>
                        <tns:label>
                           <xsl:if test="ns0:label/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:label/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:label"/>
                        </tns:label>
                        <tns:lovLabels>
                           <xsl:if test="ns0:lovLabels/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:lovLabels/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:for-each select="ns0:lovLabels/ns0:item">
                              <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:lovLabels/ns0:item ) > 0">
                                 <tns:item>
                                    <xsl:value-of select="item"/>
                                 </tns:item>
                              </xsl:if>
                           </xsl:for-each>
                        </tns:lovLabels>
                        <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:multiValuesAllowed )">
                           <tns:multiValuesAllowed>
                              <xsl:value-of select="ns0:multiValuesAllowed"/>
                           </tns:multiValuesAllowed>
                        </xsl:if>
                        <tns:name>
                           <xsl:if test="ns0:name/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:name/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:name"/>
                        </tns:name>
                        <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:refreshParamOnChange )">
                           <tns:refreshParamOnChange>
                              <xsl:value-of select="ns0:refreshParamOnChange"/>
                           </tns:refreshParamOnChange>
                           </xsl:if>
                        <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:selectAll )">
                           <tns:selectAll>
                              <xsl:value-of select="ns0:selectAll"/>
                           </tns:selectAll>
                        </xsl:if>
                        <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:templateParam )">
                           <tns:templateParam>
                              <xsl:value-of select="ns0:templateParam"/>
                           </tns:templateParam>
                        </xsl:if>
                          <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:parameterNameValues/ns0:listOfParamNameValues/ns0:item[1.0]/ns0:useNullForAll )">
                           <tns:useNullForAll>
                              <xsl:value-of select="ns0:useNullForAll"/>
                           </tns:useNullForAll>
                        </xsl:if>
                        <tns:values>
                           <xsl:if test="ns0:values/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:values/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:for-each select="ns0:values/ns0:item">
                              <tns:item>
                                 <xsl:value-of select="."/>
                              </tns:item>
                           </xsl:for-each>
                        </tns:values>
                     </tns:item>
                  </xsl:for-each>
               </tns:listOfParamNameValues>
            </tns:parameterNameValues>
            <tns:reportAbsolutePath>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:reportAbsolutePath"/>
            </tns:reportAbsolutePath>
            <tns:reportData>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:reportData"/>
            </tns:reportData>
            <tns:reportOutputPath>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:reportOutputPath"/>
            </tns:reportOutputPath>
            <tns:reportRawData>
               <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:reportRawData"/>
            </tns:reportRawData>
            <xsl:if test="string-length (/ns0:RunDataModelRq/ns0:reportRequest/ns0:sizeOfDataChunkDownload ) > 0">
               <tns:sizeOfDataChunkDownload>
                  <xsl:value-of select="/ns0:RunDataModelRq/ns0:reportRequest/ns0:sizeOfDataChunkDownload"/>
               </tns:sizeOfDataChunkDownload>
            </xsl:if>
         </tns:reportRequest>
         <tns:userID>
            <xsl:value-of select="$username"/>
         </tns:userID>
         <tns:password>
            <xsl:value-of select="$password"/>
         </tns:password>
      </tns:runDataModel>
   </xsl:template>
</xsl:stylesheet>