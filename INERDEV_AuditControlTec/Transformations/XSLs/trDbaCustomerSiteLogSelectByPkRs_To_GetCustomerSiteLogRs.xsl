<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbaCustomerSiteLogBs" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://soa.estrellaroja.com.mx/AuditControlTec" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../Schemas/External/dbaCustomerSiteLogBs_table.xsd"/>
            <oracle-xsl-mapper:rootElement name="XxerArCustSiteLogCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbaCustomerSiteLogBs"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../Schemas/AuditControlTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="GetCustomerSiteLogRs" namespace="http://soa.estrellaroja.com.mx/AuditControlTec"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [FRI DEC 15 22:19:08 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:GetCustomerSiteLogRs>
         <xsl:if test="count (/ns0:XxerArCustSiteLogCollection/ns0:XxerArCustSiteLog ) > 0">
            <cmn:Success/>
         </xsl:if>
         <xsl:if test="count (/ns0:XxerArCustSiteLogCollection/ns0:XxerArCustSiteLog ) = 0">
            <cmn:Errors>
               <cmn:Error>
                  <cmn:ErrorCode>SOA-0010</cmn:ErrorCode>
                  <cmn:ShortDescription>No Data Found</cmn:ShortDescription>
                  <cmn:Description>No data found with parameter values</cmn:Description>
                  <cmn:BusinessProcess>AuditControlTec</cmn:BusinessProcess>
                  <cmn:FailedService>GetCustomerSiteLog</cmn:FailedService>
                  <cmn:TimeStamp>
                     <xsl:value-of select="xp20:current-dateTime ( )"/>
                  </cmn:TimeStamp>
               </cmn:Error>
            </cmn:Errors>
         </xsl:if>
         <xsl:if test="count (/ns0:XxerArCustSiteLogCollection/ns0:XxerArCustSiteLog ) > 0">
            <tns:Return>
               <xsl:for-each select="/ns0:XxerArCustSiteLogCollection/ns0:XxerArCustSiteLog">
                  <tns:CustomerSiteLog>
                     <tns:CustomerSiteId>
                        <xsl:value-of select="ns0:customerSiteId"/>
                     </tns:CustomerSiteId>
                     <tns:LocationId>
                        <xsl:value-of select="ns0:locationId"/>
                     </tns:LocationId>
                     <tns:UseCode>
                        <xsl:value-of select="ns0:useCode"/>
                     </tns:UseCode>
                     <xsl:if test="ns0:createdDate">
                        <tns:CreatedDate>
                           <xsl:value-of select="ns0:createdDate"/>
                        </tns:CreatedDate>
                     </xsl:if>
                     <xsl:if test="ns0:updatedDate">
                        <tns:UpdatedDate>
                           <xsl:if test="ns0:updatedDate/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:updatedDate/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:updatedDate"/>
                        </tns:UpdatedDate>
                     </xsl:if>
                     <xsl:if test="ns0:attribute1">
                        <tns:Attribute1>
                           <xsl:if test="ns0:attribute1/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:attribute1/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:attribute1"/>
                        </tns:Attribute1>
                     </xsl:if>
                     <xsl:if test="ns0:attribute2">
                        <tns:Attribute2>
                           <xsl:if test="ns0:attribute2/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:attribute2/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:attribute2"/>
                        </tns:Attribute2>
                     </xsl:if>
                     <xsl:if test="ns0:attribute3">
                        <tns:Attribute3>
                           <xsl:if test="ns0:attribute3/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:attribute3/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:attribute3"/>
                        </tns:Attribute3>
                     </xsl:if>
                     <xsl:if test="ns0:attribute4">
                        <tns:Attribute4>
                           <xsl:if test="ns0:attribute4/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:attribute4/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:attribute4"/>
                        </tns:Attribute4>
                     </xsl:if>
                     <xsl:if test="ns0:attribute5">
                        <tns:Attribute5>
                           <xsl:if test="ns0:attribute5/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:attribute5/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:attribute5"/>
                        </tns:Attribute5>
                     </xsl:if>
                     <xsl:if test="ns0:partySiteId">
                        <tns:PartySiteId>
                           <xsl:value-of select="ns0:partySiteId"/>
                        </tns:PartySiteId>
                     </xsl:if>
                     <xsl:if test="ns0:custAcctSiteId">
                        <tns:CustAcctSiteId>
                           <xsl:value-of select="ns0:custAcctSiteId"/>
                        </tns:CustAcctSiteId>
                     </xsl:if>
                  </tns:CustomerSiteLog>
               </xsl:for-each>
            </tns:Return>
         </xsl:if>
      </tns:GetCustomerSiteLogRs>
   </xsl:template>
</xsl:stylesheet>