<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbInvoicesAPBs" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tns="http://soa.estrellaroja.com.mx/AuditControlTec" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../Schemas/External/dbInvoicesAPBs_table.xsd"/>
            <oracle-xsl-mapper:rootElement name="XxerInvoicesApTblCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/dbInvoicesAPBs"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../Schemas/AuditControlTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="GetInvoicesAPByExampleRs" namespace="http://soa.estrellaroja.com.mx/AuditControlTec"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [TUE DEC 19 17:49:46 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:GetInvoicesAPByExampleRs>
         <cmn:Success/>
         <tns:Return>
            <xsl:for-each select="/ns0:XxerInvoicesApTblCollection/ns0:XxerInvoicesApTbl">
               <tns:Invoice>
                  <xsl:if test="ns0:createdBy">
                     <tns:CreatedBy>
                        <xsl:value-of select="ns0:createdBy"/>
                     </tns:CreatedBy>
                  </xsl:if>
                  <xsl:if test="ns0:creationDate">
                     <tns:CreationDate>
                        <xsl:value-of select="ns0:creationDate"/>
                     </tns:CreationDate>
                  </xsl:if>
                  <xsl:if test="ns0:lastUpdatedBy">
                     <tns:LastUpdatedBy>
                        <xsl:value-of select="ns0:lastUpdatedBy"/>
                     </tns:LastUpdatedBy>
                  </xsl:if>
                  <xsl:if test="ns0:lastUpdateDate">
                     <tns:LastUpdateDate>
                        <xsl:value-of select="ns0:lastUpdateDate"/>
                     </tns:LastUpdateDate>
                  </xsl:if>
                  <xsl:if test="ns0:objectVersionNumber">
                     <tns:ObjectVersionNumber>
                        <xsl:value-of select="ns0:objectVersionNumber"/>
                     </tns:ObjectVersionNumber>
                  </xsl:if>
                  <tns:InvoiceId>
                     <xsl:value-of select="ns0:invoiceId"/>
                  </tns:InvoiceId>
                  <tns:EmisorRFC>
                     <xsl:value-of select="ns0:emisorRfc"/>
                  </tns:EmisorRFC>
                  <tns:ReceptorRFC>
                     <xsl:value-of select="ns0:receptorRfc"/>
                  </tns:ReceptorRFC>
                  <tns:Amount>
                     <xsl:value-of select="ns0:amount"/>
                  </tns:Amount>
                  <tns:UUID>
                     <xsl:value-of select="ns0:uuid"/>
                  </tns:UUID>
                  <xsl:if test="ns0:status">
                     <tns:Status>
                        <xsl:value-of select="ns0:status"/>
                     </tns:Status>
                  </xsl:if>
                  <xsl:if test="ns0:businessUnit">
                     <tns:BusinessUnit>
                        <xsl:value-of select="ns0:businessUnit"/>
                     </tns:BusinessUnit>
                  </xsl:if>
                  <xsl:if test="ns0:invoiceNumber">
                     <tns:InvoiceNumber>
                        <xsl:value-of select="ns0:invoiceNumber"/>
                     </tns:InvoiceNumber>
                  </xsl:if>
                  <tns:SuplierNumber>
                     <xsl:value-of select="ns0:supplierNumber"/>
                  </tns:SuplierNumber>
                  <xsl:if test="ns0:attribute1">
                     <tns:Attribute1>
                        <xsl:value-of select="ns0:attribute1"/>
                     </tns:Attribute1>
                  </xsl:if>
                  <xsl:if test="ns0:attribute2">
                     <tns:Attribute2>
                        <xsl:value-of select="ns0:attribute2"/>
                     </tns:Attribute2>
                  </xsl:if>
                  <xsl:if test="ns0:attribute3">
                     <tns:Attribute3>
                        <xsl:value-of select="ns0:attribute3"/>
                     </tns:Attribute3>
                  </xsl:if>
                  <xsl:if test="ns0:attribute4">
                     <tns:Attribute4>
                        <xsl:value-of select="ns0:attribute4"/>
                     </tns:Attribute4>
                  </xsl:if>
                  <xsl:if test="ns0:attribute5">
                     <tns:Attribute5>
                        <xsl:value-of select="ns0:attribute5"/>
                     </tns:Attribute5>
                  </xsl:if>
               </tns:Invoice>
            </xsl:for-each>
         </tns:Return>
      </tns:GetInvoicesAPByExampleRs>
   </xsl:template>
</xsl:stylesheet>