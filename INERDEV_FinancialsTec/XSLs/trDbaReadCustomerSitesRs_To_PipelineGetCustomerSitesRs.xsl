<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/dbaReadCustomerSites" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:tns="http://soa.estrellaroja.com.mx/FinancialsTec" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/External/dbaReadCustomerSites.xsd"/>
            <oracle-xsl-mapper:rootElement name="dbaReadCustomerSitesOutputCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/dbaReadCustomerSites"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/FinancialsTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="GetCustomerSitesRs" namespace="http://soa.estrellaroja.com.mx/FinancialsTec"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU DEC 14 10:50:43 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:GetCustomerSitesRs>
         <xsl:if test="count (/ns0:dbaReadCustomerSitesOutputCollection/ns0:dbaReadCustomerSitesOutput ) > 0">
            <cmn:Success/>
         </xsl:if>
         <xsl:if test="count (/ns0:dbaReadCustomerSitesOutputCollection/ns0:dbaReadCustomerSitesOutput ) = 0">
            <cmn:Errors>
               <cmn:Error>
                  <cmn:ErrorCode>SOA-00010</cmn:ErrorCode>
                  <cmn:ShortDescription>NO Data Found</cmn:ShortDescription>
                  <cmn:Description>No sites found, parameter values not match with rows</cmn:Description>
                  <cmn:BusinessProcess>FinancialsTec</cmn:BusinessProcess>
                  <cmn:FailedService>GetCustomerSites</cmn:FailedService>
                  <cmn:TimeStamp>
                     <xsl:value-of select="xp20:current-dateTime ( )"/>
                  </cmn:TimeStamp>
               </cmn:Error>
            </cmn:Errors>
         </xsl:if>
         <xsl:if test="count (/ns0:dbaReadCustomerSitesOutputCollection/ns0:dbaReadCustomerSitesOutput ) > 0">
            <tns:Return>
               <xsl:for-each select="/ns0:dbaReadCustomerSitesOutputCollection/ns0:dbaReadCustomerSitesOutput">
                  <tns:CustomerSite>
                     <tns:CustomerSiteId>
                        <xsl:if test="ns0:CustomerSiteId/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:CustomerSiteId/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:CustomerSiteId"/>
                     </tns:CustomerSiteId>
                     <tns:CustomerId>
                        <xsl:if test="ns0:CustomerId/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:CustomerId/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:CustomerId"/>
                     </tns:CustomerId>
                     <tns:StreetName>
                        <xsl:if test="ns0:StreetName/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:StreetName/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:StreetName"/>
                     </tns:StreetName>
                     <tns:ExternalNumber>
                        <xsl:if test="ns0:ExternalNumber/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:ExternalNumber/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:ExternalNumber"/>
                     </tns:ExternalNumber>
                     <tns:InternalNumber>
                        <xsl:if test="ns0:InternalNumber/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:InternalNumber/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:InternalNumber"/>
                     </tns:InternalNumber>
                     <tns:PostalCode>
                        <xsl:if test="ns0:PostalCode/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:PostalCode/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:PostalCode"/>
                     </tns:PostalCode>
                     <tns:Province>
                        <xsl:if test="ns0:Province/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:Province/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:Province"/>
                     </tns:Province>
                     <tns:City>
                        <xsl:if test="ns0:City/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:City/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:City"/>
                     </tns:City>
                     <tns:State>
                        <xsl:if test="ns0:State/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:State/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:State"/>
                     </tns:State>
                     <tns:Country>
                        <xsl:if test="ns0:Country/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:Country/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:Country"/>
                     </tns:Country>
                     <tns:SiteName>
                        <xsl:if test="ns0:SiteName/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:SiteName/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:SiteName"/>
                     </tns:SiteName>
                     <tns:SiteDescription>
                        <xsl:if test="ns0:SiteDescription/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:SiteDescription/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:SiteDescription"/>
                     </tns:SiteDescription>
                     <tns:SiteUse>
                        <xsl:if test="ns0:SiteUse/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:SiteUse/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:SiteUse"/>
                     </tns:SiteUse>
                     <tns:CreatedDate>
                        <xsl:if test="ns0:CreatedDate/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:CreatedDate/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:CreatedDate"/>
                     </tns:CreatedDate>
                     <tns:SourceTable>
                        <xsl:if test="ns0:SourceTable/@xsi:nil">
                           <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                              <xsl:value-of select="ns0:SourceTable/@xsi:nil"/>
                           </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="ns0:SourceTable"/>
                     </tns:SourceTable>
                     <tns:AccountAddressSet>
                        <xsl:value-of select="ns0:AccountAddressSet"/>
                     </tns:AccountAddressSet>
                  </tns:CustomerSite>
               </xsl:for-each>
            </tns:Return>
         </xsl:if>
      </tns:GetCustomerSitesRs>
   </xsl:template>
</xsl:stylesheet>