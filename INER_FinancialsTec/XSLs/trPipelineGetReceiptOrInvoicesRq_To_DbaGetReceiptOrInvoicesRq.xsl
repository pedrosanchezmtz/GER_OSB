<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/sp/dbaGetReceiptOrInvoicesBs" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:ns0="http://soa.estrellaroja.com.mx/FinancialsTec" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/FinancialsTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="GetReceiptOrInvoicesRq" namespace="http://soa.estrellaroja.com.mx/FinancialsTec"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../Schemas/External/dbaGetReceiptOrInvoicesBs_sp.xsd"/>
            <oracle-xsl-mapper:rootElement name="InputParameters" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/sp/dbaGetReceiptOrInvoicesBs"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [THU DEC 21 17:24:32 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:InputParameters>
         <xsl:if test="/ns0:GetReceiptOrInvoicesRq/ns0:Informations">
            <tns:P_INFORMATION>
               <xsl:for-each select="/ns0:GetReceiptOrInvoicesRq/ns0:Informations/ns0:Information">
                  <tns:P_INFORMATION_ITEM>
                     <xsl:if test="ns0:RFC">
                        <tns:RFC>
                           <xsl:if test="ns0:RFC/@xsi:nil">
                              <xsl:attribute name="nil" namespace="http://www.w3.org/2001/XMLSchema-instance">
                                 <xsl:value-of select="ns0:RFC/@xsi:nil"/>
                              </xsl:attribute>
                           </xsl:if>
                           <xsl:value-of select="ns0:RFC"/>
                        </tns:RFC>
                     </xsl:if>
                     <xsl:if test="ns0:PartyName">
                        <tns:PARTY_NAME>
                           <xsl:value-of select="ns0:PartyName"/>
                        </tns:PARTY_NAME>
                     </xsl:if>
                     <xsl:if test="ns0:PartyNumber">
                        <tns:PARTY_NUMBER>
                           <xsl:value-of select="ns0:PartyNumber"/>
                        </tns:PARTY_NUMBER>
                     </xsl:if>
                     <xsl:if test="ns0:PartyId">
                        <tns:PARTY_ID>
                           <xsl:value-of select="ns0:PartyId"/>
                        </tns:PARTY_ID>
                     </xsl:if>
                     <xsl:if test="ns0:AccountNumber">
                        <tns:ACCOUNT_NUMBER>
                           <xsl:value-of select="ns0:AccountNumber"/>
                        </tns:ACCOUNT_NUMBER>
                     </xsl:if>
                     <xsl:if test="ns0:CustAccount">
                        <tns:CUST_ACCOUNT_ID>
                           <xsl:value-of select="ns0:CustAccount"/>
                        </tns:CUST_ACCOUNT_ID>
                     </xsl:if>
                     <xsl:if test="ns0:CustAccountSiteId">
                        <tns:CUST_ACCT_SITE_ID>
                           <xsl:value-of select="ns0:CustAccountSiteId"/>
                        </tns:CUST_ACCT_SITE_ID>
                     </xsl:if>
                     <xsl:if test="ns0:PartySiteNumber">
                        <tns:PARTY_SITE_NUMBER>
                           <xsl:value-of select="ns0:PartySiteNumber"/>
                        </tns:PARTY_SITE_NUMBER>
                     </xsl:if>
                     <xsl:if test="ns0:SiteUseId">
                        <tns:SITE_USE_ID>
                           <xsl:value-of select="ns0:SiteUseId"/>
                        </tns:SITE_USE_ID>
                     </xsl:if>
                     <xsl:if test="ns0:SiteUseCode">
                        <tns:SITE_USE_CODE>
                           <xsl:value-of select="ns0:SiteUseCode"/>
                        </tns:SITE_USE_CODE>
                     </xsl:if>
                     <xsl:if test="ns0:PrimaryFlag">
                        <tns:PRIMARY_FLAG>
                           <xsl:value-of select="ns0:PrimaryFlag"/>
                        </tns:PRIMARY_FLAG>
                     </xsl:if>
                     <xsl:if test="ns0:Location">
                        <tns:LOCATION>
                           <xsl:value-of select="ns0:Location"/>
                        </tns:LOCATION>
                     </xsl:if>
                     <xsl:if test="ns0:LocationId">
                        <tns:LOCATION_ID>
                           <xsl:value-of select="ns0:LocationId"/>
                        </tns:LOCATION_ID>
                     </xsl:if>
                     <xsl:if test="ns0:PaymentTerms">
                        <tns:PAYMENT_TERMS>
                           <xsl:value-of select="ns0:PaymentTerms"/>
                        </tns:PAYMENT_TERMS>
                     </xsl:if>
                     
                      <xsl:if test="ns0:OrgId">
                        <tns:ORG_ID>
                           <xsl:value-of select="ns0:OrgId"/>
                        </tns:ORG_ID>
                     </xsl:if>
                     
                      <xsl:if test="ns0:BuName">
                        <tns:BU_NAME>
                           <xsl:value-of select="ns0:BuName"/>
                        </tns:BU_NAME>
                     </xsl:if>
                     
                     
                  </tns:P_INFORMATION_ITEM>
               </xsl:for-each>
            </tns:P_INFORMATION>
         </xsl:if>
         <tns:P_MODULE>
            <xsl:value-of select="/ns0:GetReceiptOrInvoicesRq/ns0:Module"/>
         </tns:P_MODULE>
      </tns:InputParameters>
   </xsl:template>
</xsl:stylesheet>