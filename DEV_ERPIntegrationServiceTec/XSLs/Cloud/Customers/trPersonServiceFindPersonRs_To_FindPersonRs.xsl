<xsl:stylesheet version="1.0" exclude-result-prefixes=" xsd oracle-xsl-mapper xsi xsl ns0 tns UUIDUserFunction IsUserInGroupFunction oraext IsUserInRoleFunction xp20 DVMFunctions oraxsl RuntimeTypeConversionFunctions XrefFunctions BasicCredentialsUserFunction" xmlns:UUIDUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.UUIDUserFunction" xmlns:IsUserInGroupFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInGroupFunction" xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:IsUserInRoleFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.IsUserInRoleFunction" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:DVMFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.dvm.DVMFunctions" xmlns:ns0="http://xmlns.oracle.com/apps/cdm/foundation/parties/personService/applicationModule/types/" xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas" xmlns:tns="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java" xmlns:RuntimeTypeConversionFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.RuntimeTypeConversionFunctions" xmlns:XrefFunctions="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.functions.xref.XrefFunctions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:BasicCredentialsUserFunction="http://www.oracle.com/XSL/Transform/java/com.bea.wli.sb.stages.functions.BasicCredentialsUserFunction" xmlns:ns5="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/partySite/" xmlns:ns6="http://xmlns.oracle.com/adf/svc/errors/" xmlns:ns1="http://xmlns.oracle.com/adf/svc/types/" xmlns:ns7="commonj.sdo/xml" xmlns:ns8="commonj.sdo/java" xmlns:ns10="http://xmlns.oracle.com/apps/cdm/foundation/parties/relationshipService/" xmlns:ns2="http://xmlns.oracle.com/apps/cdm/foundation/parties/personService/" xmlns:ns11="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/orgContact/" xmlns:ns12="http://xmlns.oracle.com/apps/cdm/foundation/parties/partyService/" xmlns:ns14="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/relationship/" xmlns:ns3="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/person/" xmlns:ns4="http://xmlns.oracle.com/apps/cdm/foundation/parties/contactPointService/" xmlns:ns9="commonj.sdo" xmlns:ns13="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/sourceSystemRef/" xmlns:ns15="http://xmlns.oracle.com/apps/cdm/foundation/parties/flex/contactPoint/" xmlns:cmn="http://soa.estrellaroja.com.mx/EstrellaRojaCommons">
   <oracle-xsl-mapper:schema>
      <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
      <oracle-xsl-mapper:mapSources>
         <oracle-xsl-mapper:source type="XSD">
            <oracle-xsl-mapper:schema location="../../../Schemas/Modules/Cloud/Customers/PersonService.xsd"/>
            <oracle-xsl-mapper:rootElement name="findPersonResponse" namespace="http://xmlns.oracle.com/apps/cdm/foundation/parties/personService/applicationModule/types/"/>
         </oracle-xsl-mapper:source>
      </oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:mapTargets>
         <oracle-xsl-mapper:target type="XSD">
            <oracle-xsl-mapper:schema location="../../../Schemas/ERPIntegrationServiceTec.xsd"/>
            <oracle-xsl-mapper:rootElement name="FindPersonRs" namespace="http://soa.estrellaroja.com.mx/ERPIntegrationServiceTec"/>
         </oracle-xsl-mapper:target>
      </oracle-xsl-mapper:mapTargets>
      <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.2.0(XSLT Build 161003.0739.0018) AT [WED DEC 06 17:59:38 CST 2017].-->
   </oracle-xsl-mapper:schema>
   <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
   <xsl:template match="/">
      <tns:FindPersonRs>
         <xsl:if test="/ns0:findPersonResponse/ns0:result/ns2:Value">
         <cmn:Success/>
         </xsl:if>
         <xsl:if test="count (/ns0:findPersonResponse/ns0:result/ns2:Value ) = 0 or count (/ns0:findPersonResponse/ns0:result/ns1:Message ) > 0">
            <cmn:Errors>
               <xsl:choose>
                  <xsl:when test="count (/ns0:findPersonResponse/ns0:result/ns2:Value ) = 0">
                     <cmn:Error>
                        <cmn:ErrorCode>SOA-00010</cmn:ErrorCode>
                        <cmn:ShortDescription>No data found</cmn:ShortDescription>
                        <cmn:Description>Unable to obtain data with parameter values</cmn:Description>
                        <cmn:BusinessProcess>FindPerson</cmn:BusinessProcess>
                        <cmn:FailedService>ERPIntegrationServiceTec</cmn:FailedService>
                        <cmn:TimeStamp>
                           <xsl:value-of select="xp20:current-dateTime ( )"/>
                        </cmn:TimeStamp>
                     </cmn:Error>
                  </xsl:when>
                  <xsl:when test="count (/ns0:findPersonResponse/ns0:result/ns1:Message ) > 0">
                     <xsl:for-each select="/ns0:findPersonResponse/ns0:result/ns1:Message">
                        <cmn:Error>
                           <cmn:ErrorCode>
                              <xsl:value-of select="ns6:code"/>
                           </cmn:ErrorCode>
                           <cmn:ShortDescription>
                              <xsl:value-of select="ns6:severity"/>
                           </cmn:ShortDescription>
                           <cmn:Description>
                              <xsl:value-of select="ns6:message"/>
                           </cmn:Description>
                           <cmn:BusinessProcess>FindPerson</cmn:BusinessProcess>
                           <cmn:FailedService>ERPIntegrationServiceTec</cmn:FailedService>
                           <cmn:TimeStamp>
                              <xsl:value-of select="xp20:current-dateTime ( )"/>
                           </cmn:TimeStamp>
                        </cmn:Error>
                     </xsl:for-each>
                  </xsl:when>
               </xsl:choose>
            </cmn:Errors>
         </xsl:if>
         <xsl:for-each select="/ns0:findPersonResponse/ns0:result/ns2:Value">
            <tns:Customer>
               <xsl:if test=".">
                  <tns:Person>
                     <tns:FirstName>
                        <xsl:value-of select="ns2:PersonFirstName"/>
                     </tns:FirstName>
                     <tns:LastName>
                        <xsl:value-of select="ns2:PersonLastName"/>
                     </tns:LastName>
                     <xsl:if test="ns2:PersonProfile/ns2:JgzzFiscalCode">
                        <tns:FiscalCode>
                           <xsl:value-of select="ns2:PersonProfile/ns2:JgzzFiscalCode"/>
                        </tns:FiscalCode>
                     </xsl:if>
                     <xsl:for-each select="ns2:PartySite">
                        <tns:CustomerSite>
                           <tns:PartyId>
                              <xsl:value-of select="ns12:PartyId"/>
                           </tns:PartyId>
                           <tns:PartySiteId>
                              <xsl:value-of select="ns12:PartySiteId"/>
                           </tns:PartySiteId>
                           <tns:PartySiteNumber>
                              <xsl:value-of select="ns12:PartySiteNumber"/>
                           </tns:PartySiteNumber>
                           <tns:LocationId>
                              <xsl:value-of select="ns12:LocationId"/>
                           </tns:LocationId>
                           <xsl:for-each select="ns12:PartySiteUse">
                              <tns:SiteUse>
                                 <tns:UseId>
                                    <xsl:value-of select="ns12:PartySiteUseId"/>
                                 </tns:UseId>
                                 <tns:UseCode>
                                    <xsl:value-of select="ns12:SiteUseType"/>
                                 </tns:UseCode>
                              </tns:SiteUse>
                           </xsl:for-each>
                        </tns:CustomerSite>
                     </xsl:for-each>
                     <tns:PartyId>
                        <xsl:value-of select="ns2:PartyId"/>
                     </tns:PartyId>
                     <tns:PartyNumber>
                        <xsl:value-of select="ns2:PartyNumber"/>
                     </tns:PartyNumber>
                     <tns:PersonProfileId>
                        <xsl:value-of select="ns2:PersonProfile/ns2:PersonProfileId"/>
                     </tns:PersonProfileId>
                  </tns:Person>
               </xsl:if>
            </tns:Customer>
         </xsl:for-each>
      </tns:FindPersonRs>
   </xsl:template>
</xsl:stylesheet>